#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <NewPing.h>

#define TFT_CS      10
#define TFT_RST     9
#define TFT_DC      8
#define TFT_LED     7

#define BUZZER_PIN  6
#define PIR_FRONT_PIN 2
#define PIR_LEFT_PIN  3
#define PIR_RIGHT_PIN 4
#define TRIG_PIN      5
#define ECHO_PIN      11  // Changed to a separate pin

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);
NewPing sonar(TRIG_PIN, ECHO_PIN, 1219);

void setup() {
  pinMode(PIR_FRONT_PIN, INPUT);
  pinMode(PIR_LEFT_PIN, INPUT);
  pinMode(PIR_RIGHT_PIN, INPUT);
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  
  tft.initR(INITR_BLACKTAB);
  tft.setRotation(3);
  tft.fillScreen(ST7735_BLACK);
}

void loop() {
  int distance = detectDistance();
  if (detectMotion()) {
    displayBlip();
    playBlipSound(distance);
  }
  delay(100); // Adjust delay to control loop speed
}

bool detectMotion() {
  return digitalRead(PIR_FRONT_PIN) == HIGH || digitalRead(PIR_LEFT_PIN) == HIGH || digitalRead(PIR_RIGHT_PIN) == HIGH;
}

int detectDistance() {
  unsigned int distance = sonar.ping_cm();
  if (distance == 0) {
    // Handle error, maybe retry or use a default value
    return -1;
  }
  return distance;
}

void displayBlip() {
  tft.drawPixel(80, 60, ST7735_WHITE);
}

void playBlipSound(int distance) {
  int frequency = map(distance, 0, 1219, 2000, 200);
  int duration = map(distance, 0, 1219, 100, 20);

  tone(BUZZER_PIN, frequency, duration);
  delay(duration);
  noTone(BUZZER_PIN);
}
