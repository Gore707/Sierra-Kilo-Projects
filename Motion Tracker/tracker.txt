#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <NewPing.h>

#define TFT_CS     10
#define TFT_RST    9
#define TFT_DC     8
#define TFT_MOSI   11
#define TFT_SCLK   13
#define BUZZER_PIN 7 // Digital pin for the 3-pin piezo buzzer

#define PIR_FRONT_PIN 2
#define PIR_LEFT_PIN  3
#define PIR_RIGHT_PIN 4
#define TRIG_PIN      5
#define ECHO_PIN      6

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);
NewPing sonar(TRIG_PIN, ECHO_PIN, 200);

void setup() {
  pinMode(PIR_FRONT_PIN, INPUT);
  pinMode(PIR_LEFT_PIN, INPUT);
  pinMode(PIR_RIGHT_PIN, INPUT);
  pinMode(TRIG_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  pinMode(BUZZER_PIN, OUTPUT);
  
  tft.initR(INITR_BLACKTAB);
  tft.setRotation(3); // Rotate display if needed
  tft.fillScreen(ST7735_BLACK); // Clear the screen
  
  displayWeylandYutani(); // Display Weyland-Yutani load screen
  delay(3000); // Display for 3 seconds before starting motion tracking
  tft.fillScreen(ST7735_BLACK); // Clear the screen before starting motion tracking
  drawRadar(); // Draw the radar background
}

void loop() {
  int distance = detectDistance(); // Detect distance using ultrasonic sensor
  if (detectMotion()) {
    displayBlip();
    playBlipSound(distance); // Play blip sound with pitch and duration based on distance
    delay(1000); // Adjust delay as needed
  }
}

bool detectMotion() {
  return digitalRead(PIR_FRONT_PIN) == HIGH || digitalRead(PIR_LEFT_PIN) == HIGH || digitalRead(PIR_RIGHT_PIN) == HIGH;
}

int detectDistance() {
  delay(50); // Wait for sensor to stabilize
  int distance = sonar.ping_cm(); // Get distance measurement in centimeters
  return distance;
}

void drawRadar() {
  // Draw radar background (e.g., 180-degree scan lines)
  tft.drawFastHLine(0, 120, 160, ST7735_GREEN); // Draw a horizontal line across the middle of the screen
  // Draw additional lines to represent the radar scan area (adjust coordinates as needed)
  tft.drawLine(0, 120, 40, 0, ST7735_GREEN); // Draw line from center to top-left corner
  tft.drawLine(120, 120, 80, 0, ST7735_GREEN); // Draw line from center to top-right corner
}

void displayBlip() {
  // Display blip on the radar screen to indicate motion detection
  tft.drawPixel(80, 60, ST7735_WHITE); // Draw a white pixel at the center of the screen
}

void playBlipSound(int distance) {
  // Calculate pitch and duration based on distance
  int frequency = map(distance, 0, 200, 2000, 200); // Adjust frequency based on distance (closer = higher frequency)
  int duration = map(distance, 0, 200, 100, 20); // Adjust duration based on distance (closer = shorter duration)

  // Play blip sound using the 3-pin piezo buzzer
  tone(BUZZER_PIN, frequency, duration); // Adjust frequency and duration based on distance
  delay(duration); // Wait for the tone to finish
  noTone(BUZZER_PIN); // Stop the tone
}

void displayWeylandYutani() {
  tft.fillScreen(ST7735_BLACK); // Clear the screen
  tft.setCursor(20, 20);
  tft.setTextColor(ST7735_GREEN);
  tft.setTextSize(2);
  tft.println("Weyland-Yutani Corp");
  tft.setTextSize(1);
  tft.println();
  tft.println("Instructions:");
  tft.println("- Keep device steady");
  tft.println("- Motion blips indicate activity");
}

